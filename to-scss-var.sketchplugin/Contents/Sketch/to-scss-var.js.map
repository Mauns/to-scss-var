{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./node_modules/@skpm/fs/index.js","webpack://exports/./src/to-scss-var.js","webpack://exports/external \"buffer\"","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/dom\""],"names":["fs","require","Document","document","getSelectedDocument","page","selectedPage","selection","selectedLayers","layerStyles","getSharedLayerStyles","colors","ColorArray","NameList","forEach","style","i","styleName","name","splittedName","fills","fill","enabled","type","color","toLowerCase","split","length","pop","join","obj","path","push","d","string","sort","toString","includes","replace","fileContent","writeFileSync","sketch","UI","message","uniq","a","seen","filter","item","hasOwnProperty"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA,aAAa,mBAAO,CAAC,sBAAQ;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sDAAsD;AACrF,mCAAmC,0DAA0D;AAC7F,6BAA6B,mDAAmD;AAChF,wBAAwB,eAAe;AACvC,wBAAwB,iDAAiD;AACzE,0BAA0B,gDAAgD;AAC1E,gCAAgC,sDAAsD;AACtF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACtWA;AAAA;AAAA;AAAA;;AAEA,IAAMA,EAAE,GAAGC,mBAAO,CAAC,kDAAD,CAAlB,C,CAEA;;;AAEe,2EAAW;AAExB,MAAMC,QAAQ,GAAGD,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","file":"to-scss-var.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/to-scss-var.js\");\n","// TODO: async. Should probably be done with NSFileHandle and some notifications\n// TODO: file descriptor. Needs to be done with NSFileHandle\nvar Buffer = require('buffer').Buffer\n\nvar ERROR_MESSAGES = {\n  '-2': 'no such file or directory',\n  '-13': 'permission denied',\n  '-21': 'illegal operation on a directory'\n}\n\nfunction fsError(options) {\n  var error = new Error(\n    options.code + ': '\n    + ERROR_MESSAGES[options.errno] + ', '\n    + options.syscall\n    + (options.path ? ' \\'' + options.path + '\\'' : '')\n  )\n\n  Object.keys(options).forEach(function (k) {\n    error[k] = options[k]\n  })\n\n  return error\n}\n\nfunction encodingFromOptions(options, defaultValue) {\n  return options && options.encoding\n    ? String(options.encoding)\n    : (\n      options\n        ? String(options)\n        : defaultValue\n    )\n}\n\nmodule.exports.constants = {\n  F_OK: 0,\n  R_OK: 4,\n  W_OK: 2,\n  X_OK: 1\n}\n\nmodule.exports.accessSync = function(path, mode) {\n  mode = mode | 0\n  var fileManager = NSFileManager.defaultManager()\n\n  switch (mode) {\n    case 0:\n      canAccess = module.exports.existsSync(path)\n      break\n    case 1:\n      canAccess = Boolean(Number(fileManager.isExecutableFileAtPath(path)))\n      break\n    case 2:\n      canAccess = Boolean(Number(fileManager.isWritableFileAtPath(path)))\n      break\n    case 3:\n      canAccess = Boolean(Number(fileManager.isExecutableFileAtPath(path))) && Boolean(Number(fileManager.isWritableFileAtPath(path)))\n      break\n    case 4:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path)))\n      break\n    case 5:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path))) && Boolean(Number(fileManager.isExecutableFileAtPath(path)))\n      break\n    case 6:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path))) && Boolean(Number(fileManager.isWritableFileAtPath(path)))\n      break\n    case 7:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path))) && Boolean(Number(fileManager.isWritableFileAtPath(path))) && Boolean(Number(fileManager.isExecutableFileAtPath(path)))\n      break\n  }\n\n  if (!canAccess) {\n    throw new Error('Can\\'t access ' + String(path))\n  }\n}\n\nmodule.exports.appendFileSync = function(file, data, options) {\n  if (!module.exports.existsSync(file)) {\n    return module.exports.writeFileSync(file, data, options)\n  }\n\n  var handle = NSFileHandle.fileHandleForWritingAtPath(file)\n  handle.seekToEndOfFile()\n\n  var encoding = encodingFromOptions(options, 'utf8')\n\n  var nsdata = Buffer.from(data, encoding === 'NSData' || encoding === 'buffer' ? undefined : encoding).toNSData()\n\n  handle.writeData(nsdata)\n}\n\nmodule.exports.chmodSync = function(path, mode) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.setAttributes_ofItemAtPath_error({\n    NSFilePosixPermissions: mode\n  }, path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.copyFileSync = function(path, dest, flags) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.copyItemAtPath_toPath_error(path, dest, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.existsSync = function(path) {\n  var fileManager = NSFileManager.defaultManager()\n  return Boolean(Number(fileManager.fileExistsAtPath(path)))\n}\n\nmodule.exports.linkSync = function(existingPath, newPath) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.linkItemAtPath_toPath_error(existingPath, newPath, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.mkdirSync = function(path, mode) {\n  mode = mode || 0o777\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.createDirectoryAtPath_withIntermediateDirectories_attributes_error(path, false, {\n    NSFilePosixPermissions: mode\n  }, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.mkdtempSync = function(path) {\n  function makeid() {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 6; i++)\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  }\n  var tempPath = path + makeid()\n  module.exports.mkdirSync(tempPath)\n  return tempPath\n}\n\nmodule.exports.readdirSync = function(path) {\n  var fileManager = NSFileManager.defaultManager()\n  var paths = fileManager.subpathsAtPath(path)\n  var arr = []\n  for (var i = 0; i < paths.length; i++) {\n    arr.push(String(paths[i]))\n  }\n  return arr\n}\n\nmodule.exports.readFileSync = function(path, options) {\n  var encoding = encodingFromOptions(options, 'buffer')\n  var fileManager = NSFileManager.defaultManager()\n  var data = fileManager.contentsAtPath(path)\n  if (!data) {\n    var doesExist = fileManager.fileExistsAtPath(path)\n    if (!doesExist) {\n      throw fsError({\n        errno: -2,\n        code: 'ENOENT',\n        syscall: 'open',\n        path: path\n      })\n    }\n    var isReadable = fileManager.isReadableFileAtPath(path)\n    if (!isReadable) {\n      throw fsError({\n        errno: -13,\n        code: 'EACCES',\n        syscall: 'open',\n        path: path\n      })\n    }\n    var isDirectory = fileManager.fileExistsAtPath_isDirectory(path, true)\n    if (isDirectory) {\n      throw fsError({\n        errno: -21,\n        code: 'EISDIR',\n        syscall: 'read'\n      })\n    }\n    throw new Error('Unknown error while reading file ' + path)\n  }\n\n  var buffer = Buffer.from(data)\n\n  if (encoding === 'buffer') {\n    return buffer\n  } else if (encoding === 'NSData') {\n    return buffer.toNSData()\n  } else {\n    return buffer.toString(encoding)\n  }\n}\n\nmodule.exports.readlinkSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.destinationOfSymbolicLinkAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n\n  return String(result)\n}\n\nmodule.exports.realpathSync = function(path) {\n  return String(NSString.stringByResolvingSymlinksInPath(path))\n}\n\nmodule.exports.renameSync = function(oldPath, newPath) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.moveItemAtPath_toPath_error(oldPath, newPath, err)\n\n  var error = err.value()\n\n  if (error !== null) {\n    // if there is already a file, we need to overwrite it\n    if (String(error.domain()) === 'NSCocoaErrorDomain' && Number(error.code()) === 516) {\n      var err2 = MOPointer.alloc().init()\n      fileManager.replaceItemAtURL_withItemAtURL_backupItemName_options_resultingItemURL_error(NSURL.fileURLWithPath(newPath), NSURL.fileURLWithPath(oldPath), null, NSFileManagerItemReplacementUsingNewMetadataOnly, null, err2)\n      if (err2.value() !== null) {\n        throw new Error(err2.value())\n      }\n    } else {\n      throw new Error(error)\n    }\n  }\n}\n\nmodule.exports.rmdirSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.removeItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nfunction parseStat(result) {\n  return {\n    dev: String(result.NSFileDeviceIdentifier),\n    // ino: 48064969, The file system specific \"Inode\" number for the file.\n    mode: result.NSFileType | result.NSFilePosixPermissions,\n    nlink: Number(result.NSFileReferenceCount),\n    uid: String(result.NSFileOwnerAccountID),\n    gid: String(result.NSFileGroupOwnerAccountID),\n    // rdev: 0, A numeric device identifier if the file is considered \"special\".\n    size: Number(result.NSFileSize),\n    // blksize: 4096, The file system block size for i/o operations.\n    // blocks: 8, The number of blocks allocated for this file.\n    atimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    mtimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    ctimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    birthtimeMs: Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000,\n    atime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5), // the 0.5 comes from the node source. Not sure why it's added but in doubt...\n    mtime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    ctime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    birthtime: new Date(Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    isBlockDevice: function() { return result.NSFileType === NSFileTypeBlockSpecial },\n    isCharacterDevice: function() { return result.NSFileType === NSFileTypeCharacterSpecial },\n    isDirectory: function() { return result.NSFileType === NSFileTypeDirectory },\n    isFIFO: function() { return false },\n    isFile: function() { return result.NSFileType === NSFileTypeRegular },\n    isSocket: function() { return result.NSFileType === NSFileTypeSocket },\n    isSymbolicLink: function() { return result.NSFileType === NSFileTypeSymbolicLink },\n  }\n}\n\nmodule.exports.lstatSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.attributesOfItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n\n  return parseStat(result)\n}\n\n// the only difference with lstat is that we resolve symlinks\n//\n// > lstat() is identical to stat(), except that if pathname is a symbolic\n// > link, then it returns information about the link itself, not the file\n// > that it refers to.\n// http://man7.org/linux/man-pages/man2/lstat.2.html\nmodule.exports.statSync = function(path) {\n  return module.exports.lstatSync(module.exports.realpathSync(path))\n}\n\nmodule.exports.symlinkSync = function(target, path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.createSymbolicLinkAtPath_withDestinationPath_error(path, target, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.truncateSync = function(path, len) {\n  var hFile = NSFileHandle.fileHandleForUpdatingAtPath(sFilePath)\n  hFile.truncateFileAtOffset(len || 0)\n  hFile.closeFile()\n}\n\nmodule.exports.unlinkSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.removeItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.utimesSync = function(path, aTime, mTime) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.setAttributes_ofItemAtPath_error({\n    NSFileModificationDate: aTime\n  }, path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.writeFileSync = function(path, data, options) {\n  var encoding = encodingFromOptions(options, 'utf8')\n\n  var nsdata = Buffer.from(\n    data, encoding === 'NSData' || encoding === 'buffer' ? undefined : encoding\n  ).toNSData()\n\n  nsdata.writeToFile_atomically(path, true)\n}\n","import sketch from 'sketch'\n\nconst fs = require('@skpm/fs')\n\n// documentation: https://developer.sketchapp.com/reference/api/\n\nexport default function() {  \n\n  const Document = require('sketch/dom').Document\n  let   document = Document.getSelectedDocument()\n  let   page = document.selectedPage\n  let   selection = document.selectedLayers\n  let   layerStyles = document.getSharedLayerStyles()\n\n  let   colors = []\n  let   ColorArray = []\n  let   NameList = []\n\n  // Iterate over Layerstyles\n  layerStyles.forEach((style, i) => {\n\n    let styleName = style.name\n    let splittedName\n    let fills = style.style.fills\n\n    // Iterate over fills of styles and find the enabled ones\n    fills.forEach((fill, i) => {\n      if (fill.enabled === true) {\n        if (fill.type == 'Fill') {\n\n        let color = fill.color\n\n        // parse name \n        styleName = styleName.toLowerCase()\n        styleName = styleName.split(\"/\")\n        splittedName = styleName\n        styleName = styleName.length > 1 ? styleName[styleName.length - 1] : styleName\n\n        splittedName.length > 1 && splittedName.pop()\n        splittedName = splittedName.join(\"/\")\n\n        let obj = {}\n            obj = {\n              path: splittedName,\n              name: styleName,\n              color\n            }\n\n        return colors.push(obj), styleName, splittedName\n        }\n      }\n    })\n  })\n\n  colors.forEach((d, i) => {\n    \n    let string = `// ${d.path}\\n$${d.name}: ${d.color};\\n`\n    \n    return ColorArray.push(string)\n  })\n\n  \n  ColorArray.sort()\n  ColorArray = ColorArray.toString()\n  ColorArray = ColorArray.split(\",\")\n  \n  colors.forEach((d, i) => {\n    if (ColorArray[i].includes(`// ${d.path}`)) {\n      return ColorArray[i].replace(`// ${d.path}`, 'lol')\n    }\n  })\n\n  ColorArray = ColorArray.join(\"\\n\")\n  \n  let fileContent = ColorArray\n\n  fs.writeFileSync(\"/Users/marvinbruns/Desktop/fills.scss\", fileContent)\n\n  sketch.UI.message(\"generated scss file. Take a look at your desktop.\")\n}\n\nfunction uniq(a) {\n  let seen = {}\n  return a.filter(function (item) {\n    seen.hasOwnProperty(item) ? false : (seen[item] = true)\n  })\n}","module.exports = require(\"buffer\");","module.exports = require(\"sketch\");","module.exports = require(\"sketch/dom\");"],"sourceRoot":""}